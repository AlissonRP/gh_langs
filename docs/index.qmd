---
title: "Linguagens de Programação"
subtitle: "No GitHub"
author: "Alisson Rosa"
format: 
    revealjs:
        theme: default
        preview-links: auto
        chalkboard: true
        transition: fade
        controls: true
        width: 1210
        height: 700

---

## O que vai ser falado

::: {.incremental}
- Introdução e conceitos

<br />

- Linguagens Gerais

<br />

- Linguagens "para" Dados

<br />

- Além
:::



# Introdução e conceitos

![](https://gifimage.net/wp-content/uploads/2018/04/question-animated-gif-13.gif){.absolute top=350 right=370 width="450" height="250"}

## Introdução 
* Base de dados disponível no [kaggle](https://www.kaggle.com/datasets/isaacwen/github-programming-languages-data)

<br />

* Três datasets 

<br />


* Quais linguagens tem mais destaque dentro do GitHub?

```{julia}

include("utils.jl")
using DataFrames
import CSV
using Plots
default(formatter=identity, tickfontsize=7, titlefontsize=12,
legend=:topleft)
theme(:vibrant)
using Statistics
using Pipe: @pipe
using PrettyTables


pr = DataFrame(CSV.File("data/prs.csv"));
issues = DataFrame(CSV.File("data/issues.csv"));
total = DataFrame(CSV.File("data/repos.csv"));
```

## Conceitos

-  Repositório

<br />

- Issues

<br />

* Pull Request (pr)






## Datasets

:::: {.columns}

::: {.column width="59%"}

$\rightarrow$ Pull requests
```{julia}
pretty_table(pr |> df -> first(df, 7); backend = Val(:html), header = (names(pr)))
```
:::

::: {.column width="41%"}
$\rightarrow$ Repositórios
```{julia}
pretty_table(total  |> df -> first(df, 7); backend = Val(:html), header = (names(total)),tf=tf_html_dark)
```
:::

::::


## Disclaimer


- Nem tudo funcionou como deveria funcionar

::: {.incremental}
- ![](memes/ggplot.jpg){.absolute top=210 right=250 width="480" height="450"}
:::









# Linguagens Gerais
- Top 5 em quantidade de repositórios 
- Média de issues e pr ao longo do tempo


## 


<details>
  <summary markdown="span">Código</summary>


```julia
@pipe total |>
      sort(_, order(:num_repos, rev=true)) |>
      first(_, 5) |>
      select(_, :language => :"Linguagem", :num_repos => :"N") |>
      df -> bar(df.Linguagem, df.N, fill=["#f3ff33","#337aff","#ff5e33", 
                "#55ff33","#233cad"], legend=false, size=(1200,700))  
@pipe  total |> 
      filter(:language =>  ==("R"), _) |> 
       df -> bar!(df[:,:language] , df[:,:num_repos], legend=false, size=(1200,700))
```

</details>




```{julia, fig-align="center" , width="150%"}
#| fig-height: 1
@pipe total |>
      sort(_, order(:num_repos, rev=true)) |>
      first(_, 5) |>
      select(_, :language => :"Linguagem", :num_repos => :"N") |>
      df -> bar(df.Linguagem, df.N, fill=["#f3ff33","#337aff","#ff5e33", 
                "#55ff33","#233cad"], legend=false)  
@pipe  total |> 
      filter(:language =>  ==("R"), _) |> 
       df -> bar!(df[:,:language] , df[:,:num_repos], legend=false)
```

## 
<details>
  <summary markdown="span">Código</summary>


```julia
p1 = @pipe top_5(issues,:year) |> 
           areaplot(_[:,:year],_[:,:media], title="issues", label=false, legend=:topleft)
p2 = @pipe top_5(pr,:year)  |>
           areaplot(_[:,:year],_[:,:media], title="pr", color = "#ff4933", 
           label=false, legend=:topleft)
           
plot(p1,p2,layout= (1,2))
```
</details>


```{julia}
p1 = @pipe top_5(issues,:year) |> 
           areaplot(_[:,:year],_[:,:media], title="issues", label=false, legend=:topleft)
p2 = @pipe top_5(pr,:year)  |>
           areaplot(_[:,:year],_[:,:media], title="pr", color = "#ff4933", 
           label=false, legend=:topleft)
           
plot(p1,p2,layout= (1,2))
```


## 

<details>
  <summary markdown="span">Código</summary>


```julia

fav_langs(pr, ["Java","Python", "JavaScript", "Ruby", "PHP"]) |> 
      df -> plot(df[:,:year], df[:,:media], g = df[:,:name], formatter=identity)
```
::: footer
pull requests
:::

</details>

```{julia}
#| echo: false
fav_langs(pr, ["Java","Python", "JavaScript", "Ruby", "PHP"]) |> 
      df -> plot(df[:,:year], df[:,:media], g = df[:,:name])
```

##

<details>
  <summary markdown="span">Código</summary>


```julia
fav_langs(issues, ["Java","Python", "JavaScript", "Ruby", "PHP"]) |> 
      df -> plot(df[:,:year], df[:,:media], g = df[:,:name])
```


</details>

```{julia}
fav_langs(issues, ["Java","Python", "JavaScript", "Ruby", "PHP"]) |> 
      df -> plot(df[:,:year], df[:,:media], g = df[:,:name])
```

# Linguagem "para" Dados

## Linguagem Julia

::: {.incremental}
- Lançada oficialmente em 2012

<br />

- Aglomerar tudo de bom que outras linguagens tinham 

<br />

- **RÁPIDA COMO C, FÁCIL DE USAR COMO PYTHON**

<br />

:::




## Linguagem R
::: {.incremental}
- Lançada oficialmente em 1995

<br />

- Inicialmente lançada com proposito de análise estatística

<br />


:::


## Total de repositórios
<details>
  <summary markdown="span">Código</summary>


```julia
total[findall(in(["R", "Julia"]), total[:, :language]), :] |>
df -> bar(df[:, :language], df[:, :num_repos], g=df[:, :language],
        fill=["#2B5FE9", "#AA30FF"], legend=:topleft)
```
</details>

```{julia}
total[findall(in(["R", "Julia"]), total[:, :language]), :] |>
df -> bar(df[:, :language], df[:, :num_repos], g=df[:, :language],
        fill=["#2B5FE9", "#AA30FF"], legend=:topleft)
```


## 

<details>
  <summary markdown="span">Código</summary>


```julia
p1 = fav_langs(pr, ["R","Julia"]) |> 
      df -> plot(df[:,:year], df[:,:media], g = df[:,:name], title = "Pull Requests")
p2 = fav_langs(issues, ["R","Julia"]) |> 
      df -> plot(df[:,:year], df[:,:media], g = df[:,:name], title = "Issues")

plot(p1,p2,layout=(1,2))

```
</details>

```{julia}
p1 = fav_langs(pr, ["R","Julia"]) |> 
      df -> plot(df[:,:year], df[:,:media], g = df[:,:name], title = "Pull Requests")
p2 = fav_langs(issues, ["R","Julia"]) |> 
      df -> plot(df[:,:year], df[:,:media], g = df[:,:name], title = "Issues")

plot(p1,p2,layout=(1,2))

```





# Mas e Python?

## 
```{julia}
p1 = fav_langs(pr, ["R","Julia","Python"]) |> 
      df -> plot(df[:,:year], df[:,:media], g = df[:,:name])
p2 = fav_langs(issues, ["R","Julia", "Python"]) |> 
      df -> plot(df[:,:year], df[:,:media], g = df[:,:name])

plot(p1, p2, layout=(1,2))

```

::: footer
Uma imagem vale mais que mil palavras
:::

## Quando algo termina, algo começa.

- Devo aprender Julia?

::: {.incremental}
- ![](memes/Documents.jpg){.absolute top=310 left=370 width="380" height="280"}
:::


::: footer
Boa noite pérolas!
:::


## {background-iframe="https://docs.julialang.org/en/v1/" background-interactive="true"}






![](https://juliadatascience.io/im/let_fig_front_cover_Use_lazy_loading_to_keep_homepage_speed_high_.svg){.absolute top=90 right=10 width="280" height="350"}

