---
title: "Linguagens de Programação"
subtitle: "No GitHub"
author: "Alisson Rosa"
format: 
    revealjs:
        theme: default
        preview-links: auto
        chalkboard: true
        transition: fade
        controls: true

---

## O que vai ser falado

::: {.incremental}
- Introdução e conceitos

<br />

- Linguagens Gerais

<br />

- Linguagens para "Dados"

<br />

- Além
:::



# Introdução e conceitos

![](http://31.media.tumblr.com/17fea920ff36ef4f5b877d5216a7aad9/tumblr_mo9xje8zZ41qcbiufo1_1280.gif){.absolute top=410 right=300 width="450" height="850"}

## Introdução 
 

```{julia}

include("utils.jl")
using DataFrames
import CSV
using Plots
default(formatter=identity, tickfontsize=7, titlefontsize=12,
legend=:topleft)
theme(:vibrant)
using Statistics
using Pipe: @pipe
using PrettyTables
tf_html_dark

pr = DataFrame(CSV.File("data/prs.csv"));
issues = DataFrame(CSV.File("data/issues.csv"));
total = DataFrame(CSV.File("data/repos.csv"));
```



## Repos DataSet

```{julia}
pretty_table(pr |> df -> first(df, 6); backend = Val(:html), header = (names(pr)))
```

## total DataSet

```{julia}
pretty_table(total  |> df -> first(df, 6); backend = Val(:html), header = (names(total)))
```




## Conceitos

-  Repositório

<br />

- Issues:

<br />

* Pull Request (pr)









# Linguagens Gerais
- Top 5 em quantidade de repositórios 
- Issues e pr ao longo do tempo
![](a-Grayscale-image-of-character-A-b-Binary-representation-of-character-A-c.ppm.png){.absolute top=410 left=310  width="450" height="250"}

## Top 5 


<details>
  <summary markdown="span">Código</summary>


```julia
@pipe total |>
      sort(_, order(:num_repos, rev=true)) |>
      first(_, 5) |>
      select(_, :language => :"Linguagem", :num_repos => :"N") |>
      df -> bar(df.Linguagem, df.N, fill=["#f3ff33","#337aff","#ff5e33", 
                "#55ff33","#233cad"], legend=false)  
@pipe  total |> 
      filter(:language =>  ==("R"), _) |> 
       df -> bar!(df[:,:language] , df[:,:num_repos], legend=false)
```

</details>




```{julia}
@pipe total |>
      sort(_, order(:num_repos, rev=true)) |>
      first(_, 5) |>
      select(_, :language => :"Linguagem", :num_repos => :"N") |>
      df -> bar(df.Linguagem, df.N, fill=["#f3ff33","#337aff","#ff5e33", 
                "#55ff33","#233cad"], legend=false)  
@pipe  total |> 
      filter(:language =>  ==("R"), _) |> 
       df -> bar!(df[:,:language] , df[:,:num_repos], legend=false)
```

## Médias
<details>
  <summary markdown="span">Código</summary>


```julia
p1 = @pipe top_5(issues,:year) |> 
           areaplot(_[:,:year],_[:,:media], title="issues", label=false, legend=:topleft)
p2 = @pipe top_5(pr,:year)  |>
           areaplot(_[:,:year],_[:,:media], title="pr", color = "#ff4933", 
           label=false, legend=:topleft)
           
plot(p1,p2,layout= (1,2))
```
</details>


```{julia}
p1 = @pipe top_5(issues,:year) |> 
           areaplot(_[:,:year],_[:,:media], title="issues", label=false, legend=:topleft)
p2 = @pipe top_5(pr,:year)  |>
           areaplot(_[:,:year],_[:,:media], title="pr", color = "#ff4933", 
           label=false, legend=:topleft)
           
plot(p1,p2,layout= (1,2))
```


## Algumas linguagens 

<details>
  <summary markdown="span">Código</summary>


```julia

fav_langs(pr, ["Java","Python", "JavaScript", "Ruby", "PHP"]) |> 
      df -> plot(df[:,:year], df[:,:media], g = df[:,:name])
```

</details>

```{julia}
#| echo: false
fav_langs(pr, ["Java","Python", "JavaScript", "Ruby", "PHP"]) |> 
      df -> plot(df[:,:year], df[:,:media], g = df[:,:name])
```

---
# Linguagem "para" Dados

## Linguagem Julia

::: {.incremental}
- Lançada oficialmente em 2012

<br />

- Aglomerar tudo de bom que outras linguagens tinham 

<br />

- **RÁPIDA COMO C, FÁCIL DE USAR COMO PYTHON**

<br />

:::




## Linguagem R
::: {.incremental}
- Lançada oficialmente em 1995

<br />

- Inicialmente lançada com proposito de análise estatística

<br />

- ![](https://i.pinimg.com/originals/a2/3f/b9/a23fb94724ad59225252e68bbd981629.gif){.absolute top=310 left=370 width="380" height="280"}

:::


## Total de repositórios

```{julia}
#| echo: true
total[findall(in(["R", "Julia"]), total[:, :language]), :] |>
df -> bar(df[:, :language], df[:, :num_repos], g=df[:, :language],
        fill=["#2B5FE9", "#AA30FF"], legend=:topleft)
```


## Issues e Prs



```{julia}
p1 = fav_langs(pr, ["R","Julia"]) |> 
      df -> plot(df[:,:year], df[:,:media], g = df[:,:name], title = "Pull Requests")
p2 = fav_langs(issues, ["R","Julia"]) |> 
      df -> plot(df[:,:year], df[:,:media], g = df[:,:name], title = "Issues")

plot(p1,p2,layout=(1,2))

```





# Mas e Python?

## 
```{julia}
p1 = fav_langs(pr, ["R","Julia","Python"]) |> 
      df -> plot(df[:,:year], df[:,:media], g = df[:,:name])
p2 = fav_langs(issues, ["R","Julia", "Python"]) |> 
      df -> plot(df[:,:year], df[:,:media], g = df[:,:name])

plot(p1,p2,layout=(1,2))

```

::: footer
Uma imagem vale mais que mil palavras
:::

## Quando algo termina, algo começa.

::: {.incremental}

:::
![](https://i.pinimg.com/originals/0f/a0/94/0fa09464c343885355e6aa4d2f4a88b5.gif){.absolute top=330 left=370 width="380" height="250"}




## {background-iframe="https://docs.julialang.org/en/v1/" background-interactive="true"}






![](https://juliadatascience.io/im/let_fig_front_cover_Use_lazy_loading_to_keep_homepage_speed_high_.svg){.absolute top=90 right=10 width="280" height="350"}

